---
- name: "Ensure sudo is installed"
  package:
    name: "sudo"
    state: "present"
  retries: 3
  register: "sudo_installed"
  until: "sudo_installed is succeeded"

- name: "Set include directories variable"
  set_fact:
    sudo_include_dirs: "{{ sudo_sudoers_files
    | selectattr('include_directories', 'defined')
    | map(attribute='include_directories') | flatten }}"

- name: "Set sudoer file paths variable"
  set_fact:
    sudo_file_paths: "{{ sudo_sudoers_files
    | selectattr('path', 'defined')
    | map(attribute='path') | flatten }}"

- name: "Display all sudoers include directories"
  debug:
    var: "sudo_include_dirs"
    verbosity: "1"

- name: "Display all sudoers file paths"
  debug:
    var: "sudo_file_paths"
    verbosity: "1"

- name: "Ensure include directories are created"
  file:
    path: "{{ item }}"
    owner: "root"
    group: "root"
    mode: "0750"
    state: "directory"
  with_items: "{{ sudo_include_dirs }}"
  when: "sudo_include_dirs | length > 0"

- name: "Ensure sudoers include files are configured"
  template:
    src: "sudoers.j2"
    dest: "{{ item.path }}"
    owner: "root"
    group: "root"
    mode: "0440"
    validate: '{{ sudo_visudo_path }} -cf %s'
  with_items: "{{ sudo_sudoers_files }}"
#  become: True
  loop_control:
    label: "{{ item.path }}"
  when: "item.path != '/etc/sudoers'"

- name: "Ensure /etc/sudoers is configured"
  template:
    src: "sudoers.j2"
    dest: "/etc/sudoers"
    owner: "root"
    group: "root"
    mode: "0440"
    validate: '{{ sudo_visudo_path }} -cf %s'
  with_items: "{{ sudo_sudoers_files }}"
  loop_control:
    label: "{{ item.path }}"
  when:
    - "item.path == '/etc/sudoers'"
    - "sudo_rewrite_default_sudoers_file | bool"

- name: "Remove unauthorized included sudoer files"
  when:
    - "sudo_remove_unauthorized_included_files | bool"
    - "sudo_include_dirs | length > 0"
  block:
    - name: "Search for sudoer files in included directories"
      find:
        paths: "{{ sudoers_include_dirs }}"
        recurse: True
        hidden: True
        file_type: "any"
      register: "sudo_existing_included_files"

    - name: "Set unauthorized included sudoers files variable"
      set_fact:
        sudo_unauthorized_files: "{{ sudo_existing_included_files['files']
        | selectattr('path', 'defined') | map(attribute='path')
        | flatten | difference(sudoers_file_paths) }}"

    - name: "Display unauthorized sudoers include files to be removed"
      debug:
        var: "sudo_unauthorized_files"
        verbosity: "1"

    - name: "Remove unauthorized included sudoers files"
      file:
        path: "{{ item }}"
        state: "absent"
      with_items: "{{ sudo_unauthorized_files }}"
      when: "sudo_unauthorized_files | length > 0"
